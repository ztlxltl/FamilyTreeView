# This workflow is based on David Straub's workflow:
# https://gramps.discourse.group/t/github-workflow-to-automatically-build-addons/6499
# https://github.com/DavidMStraub/addons-source/blob/b3b289616f76ba23171dcb405e60ae2c9f10c6d7/.github/workflows/build.yml

name: Build and Distribute Addons

on:
  # # Activate if every push (incl. PRs) should trigger (incl. README update etc.)
  # push:
  #   branches:
  #     - maintenance/gramps52

  # # Activate while working on this in a pr.
  # # Recommendation: create branches maintenance/gramps52-test and dist-test
  # # change all maintenance/gramps52 to maintenance/gramps52-test and all dist to dist-test below.
  # pull_request:
  #   branches:
  #       - maintenance/gramps52

  # Allow running it manually (e.g. only after relevant changes to the code)
  workflow_dispatch:

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (in cwd)
        uses: actions/checkout@v3
        with:
          ref: 'maintenance/gramps52'
      - name: Move repo to subdir
        # Required since checkout doesn't create subdir and make.py expects it.
        run: |
          mkdir FamilyTreeView
          mv $(ls -A | grep -v 'FamilyTreeView') FamilyTreeView
      - name: Move .py files one level up
        # Required since make.py only looks at 1st dir level.
        run: |
          cd FamilyTreeView
          rm -r $(ls -A | grep -v '.git\|src\|COPYING.txt\|MANIFEST')
          mv src/*.py .
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Ubuntu dependencies
        run: sudo apt update && sudo apt-get -y install gettext appstream pkg-config libcairo2-dev gir1.2-gtk-3.0 libgirepository1.0-dev libicu-dev gir1.2-pango-1.0
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Pin PyGObject version because newer versions require girepository-2.0 which is not available on some distributions (e.g. Ubuntu 24.04.2).
          pip install PyGObject==3.50.0
          pip install gramps[GUI,i18n]==5.2.4
      - name: Get make.py
        run: wget https://raw.githubusercontent.com/gramps-project/addons-source/refs/heads/maintenance/gramps52/make.py
      - name: Build Addons
        run: |
          export LANGUAGE=en_US.UTF-8
          python3 make.py gramps52 init all
          python3 make.py gramps52 compile all
          python3 make.py gramps52 build all
          python3 make.py gramps52 listing all
          python3 make.py gramps52 as-needed
      - name: Push new build version
        run: |
          cd FamilyTreeView

          # Configure Git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

          # Only add changes made by the build: 
          # 1) Bumped addon verions in .gpr.py files
          #    (Move files back to original position.)
          mv *.gpr.py src/
          git add '*.gpr.py'
          # 2) Updated gettext template file
          git add po/template.pot

          git commit -m "Update files after automated build"
          git push --force origin maintenance/gramps52:maintenance/gramps52
      - name: Remove all files (output is in ../addons)
        run: rm -rf -- .[!.]* *
      - name: Checkout repository (in cwd)
        uses: actions/checkout@v3
        with:
          ref: dist
      - name: Commit and Push to dist Branch
        run: |
          # Configure Git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

          # Create or switch to the 'dist' branch
          git checkout -b dist || git checkout dist

          # Replace the directory of the built Gramps version with the new one from ../addons
          rm -rf gramps52
          cp -r ../addons/* ./

          # Add and commit the updated build files
          git add gramps52
          git commit -m "Automated build and distribution of addons"

          # Push changes to the 'dist' branch
          git push origin dist --force
